@model GFS.Models.Policies.Payer

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Payer</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.paymentType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.RadioButtonFor(model => model.paymentType, "Cash")
                @Html.LabelFor(model => model.paymentType, "Cash")

                @Html.RadioButtonFor(model => model.paymentType, "EFT")
                @Html.LabelFor(model => model.paymentType, "EFT")

                @Html.RadioButtonFor(model => model.paymentType, "ATM Cash Deposit")
                @Html.LabelFor(model => model.paymentType, "ATM Cash Deposit")

                @Html.RadioButtonFor(model => model.paymentType, "Debit Order")
                @Html.LabelFor(model => model.paymentType, "Debit Order")
                @Html.ValidationMessageFor(model => model.paymentType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.initialPremium, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @if (Session["addamount"] != null)
                {
                    @Session["addamount"].ToString()
                }
                else if (Session["addamount"] == null && Session["prem"] != null)
                {
                    @Session["prem"].ToString()
                }
                else if (Session["prem"] == null)
                {
                    @Html.EditorFor(model => model.initialPremium, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.initialPremium, "", new { @class = "text-danger" })
                }               
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @if (Session["fname"] != null)
                {
                    @Session["fname"].ToString()
                }
                else if (Session["fname"] == null)
                {
                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                }
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @if (Session["lname"] != null)
                {
                    @Session["lname"].ToString()
                }
                else if (Session["lname"] == null)
                {
                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                }
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @if (Session["idnum"] != null)
                {
                    @Session["idnum"].ToString()
                }
                else if (Session["idnum"] == null)
                {
                    @Html.EditorFor(model => model.idNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idNo, "", new { @class = "text-danger" })
                }
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.relation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @if (Session["Pay"] != null)
                {
                    @Session["Pay"].ToString()
                }
                else if (Session["Pay"] == null)
                {
                    @Html.DropDownListFor(model => model.relation, ViewBag.relist as List<SelectListItem>, "-Select-")
                    @Html.ValidationMessageFor(model => model.relation, "", new { @class = "text-danger" })
                }
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @if (Session["contact"] != null)
                {
                    @Session["contact"].ToString()
                }
                else if (Session["contact"] == null)
                {
                    @Html.EditorFor(model => model.contactNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.contactNo, "", new { @class = "text-danger" })
                }

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.payerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @if (Session["email"] != null)
                {
                    @Session["email"].ToString()
                }
                else if (Session["email"] == null)
                {
                    @Html.EditorFor(model => model.payerEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.payerEmail, "", new { @class = "text-danger" })
                }

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.payingFor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @if (Session["owner"] != null)
                {
                    @Session["owner"].ToString()
                }
                else if (Session["owner"] == null)
                {
                    @Html.EditorFor(model => model.payingFor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.payingFor, "", new { @class = "text-danger" })
                }
            </div>
        </div>





        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Payer" class="btn btn-success" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Forgot Something" class="btn btn-danger" onclick="history.go(-1);">
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
