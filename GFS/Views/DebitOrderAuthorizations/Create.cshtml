@model GFS.Models.Policies.DebitOrderAuthorization

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Debit Order Authorization</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.bankName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.bankName, ViewBag.blist as List<SelectListItem>, "-Select-")
                @Html.ValidationMessageFor(model => model.bankName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.accNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.accNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.accNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.branchcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.branchcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.branchcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.accountType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.accountType, ViewBag.atlist as List<SelectListItem>, "-Select-")
                @Html.ValidationMessageFor(model => model.accountType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.commenceDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.commenceDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.commenceDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @if (Session["addamount"] != null)
                {
                    @Session["addamount"].ToString()
                }
                else if (Session["addamount"] == null && Session["prem"] != null)
                {
                    @Session["prem"].ToString()
                }
                else if (Session["addamount"] == null && Session["prem"] == null)
                {
                    @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                }               
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Done" class="btn btn-success" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Forgot Something" class="btn btn-danger" onclick="history.go(-1);">
            </div>
        </div>
    </div>
    if (Session["responce7"] != null)
    {
        <script>alert("@Session["responce7"].ToString()");</script>
    }
    @Html.ValidationSummary()
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
